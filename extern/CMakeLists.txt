include(CheckCXXCompilerFlag)
check_cxx_compiler_flag(-w CXX_SupportDisableWarning)
if(${CXX_SupportDisableWarning})
    add_compile_options(-w)
endif()

set(QHOTKEY_INSTALL OFF CACHE BOOL "启用安装规则")
add_subdirectory(QHotkey)
set(SW_BUILD OFF CACHE BOOL "使用 SW BUILD")
add_subdirectory(leptonica)

set(GRAPHICS_DISABLED ON CACHE BOOL "Disable disable graphics (ScrollView)")
set(DISABLED_LEGACY_ENGINE ON CACHE BOOL "Disable the legacy OCR engine")
set(BUILD_TRAINING_TOOLS OFF CACHE BOOL "Build training tools")
set(DISABLE_ARCHIVE ON CACHE BOOL "Disable build with libarchive (if available)")
set(DISABLE_CURL ON CACHE BOOL "Disable build with libcurl (if available)")
set(INSTALL_CONFIGS OFF CACHE BOOL "Install tesseract configs")
add_subdirectory(tesseract)

add_subdirectory(fmt)

set(SPDLOG_ENABLE_PCH ON CACHE BOOL "启用预编译头")
set(SPDLOG_FMT_EXTERNAL ON CACHE BOOL "使用外部的 fmt 库")
add_subdirectory(spdlog)

if(${${PROJECT_NAME}_BUILD_TEST})
  set(INSTALL_GTEST OFF CACHE BOOL "安装 gtest 库")
  set(gtest_force_shared_crt ON CACHE BOOL "使用动态 crt 库")
  add_subdirectory(googletest)
  include(GoogleTest)
endif()

if(WIN32)
    add_subdirectory(kvantum-on-windows)
endif()
